# Generated by Django 5.1.3 on 2024-11-26 13:04

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_motherbroad_powerunit_ram'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cooler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, verbose_name='Тип')),
                ('model', models.CharField(max_length=255, verbose_name='Модель')),
                ('powerDissipation', models.IntegerField(verbose_name='Рассеиваемая мощность')),
                ('typeOfConstruction', models.CharField(max_length=255, verbose_name='Тип Конструкции')),
                ('baseMaterial', models.CharField(max_length=255, verbose_name='Основной металл')),
                ('radiatorMaterial', models.CharField(max_length=255, verbose_name='Металл радиатора')),
                ('minimumRotationSpeed', models.IntegerField(verbose_name='Минимальная скорость вращения')),
                ('maximumStaticPressure', models.CharField(max_length=255, verbose_name='Максимальное статическое давление')),
                ('connectorForConnectingFans', models.CharField(max_length=255, verbose_name='Разъем для Подключения Вентиляторов')),
                ('maximumRotationSpeed', models.IntegerField(verbose_name='Максимальная скорость вращения')),
                ('ratedCurrent', models.CharField(max_length=255, verbose_name='Номинальный ток')),
                ('ratedVoltage', models.IntegerField(verbose_name='Номинальное напряжение')),
                ('countryOfOrigin', models.CharField(max_length=255, verbose_name='Страна происхождения')),
                ('amount', models.IntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Система охлаждения',
                'verbose_name_plural': 'Системы охлаждения',
            },
        ),
        migrations.CreateModel(
            name='Corpus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255, verbose_name='Модель')),
                ('orientationOfTheMotherboard', models.CharField(max_length=255, verbose_name='Ориентация материнской платы')),
                ('width', models.IntegerField(verbose_name='Ширина')),
                ('height', models.IntegerField(verbose_name='Высота')),
                ('weight', models.IntegerField(verbose_name='Вес')),
                ('mainColor', models.CharField(max_length=255, verbose_name='Основной цвет')),
                ('additionalColor', models.CharField(max_length=255, verbose_name='Доп. цвета')),
                ('housingMaterial', models.CharField(max_length=255, verbose_name='Материал корпуса')),
                ('formFactorOfCompatibleBoards', models.CharField(max_length=255, verbose_name='Форм фактор совместимой платы')),
                ('theFormFactorOfCompatiblePowerSupplies', models.CharField(max_length=255, verbose_name='Форм фатор совместимого блока питания')),
                ('countryOfOrigin', models.CharField(max_length=255, verbose_name='Страна происхождения')),
                ('amount', models.IntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Корпус',
                'verbose_name_plural': 'Корпусы',
            },
        ),
        migrations.CreateModel(
            name='Hdd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255, verbose_name='Модель')),
                ('hddCapacity', models.IntegerField(verbose_name='Емкость жесткого диска')),
                ('amountOfCacheMemory', models.IntegerField(verbose_name='Объем Кэш-памяти')),
                ('spindleRotationSpeed', models.IntegerField(verbose_name='скорость вращения шпинделя')),
                ('maximumDataTransferRate', models.IntegerField(verbose_name='максимальная скорость передачи данных')),
                ('interface', models.CharField(max_length=255, verbose_name='Интерфейс')),
                ('maximumOperatingTemperature', models.CharField(max_length=255, verbose_name='максимальная рабочая температура')),
                ('countryOfOrigin', models.CharField(max_length=255, verbose_name='Страна происхождения')),
                ('amount', models.IntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'HDD',
                'verbose_name_plural': 'HDDs',
            },
        ),
        migrations.CreateModel(
            name='Ssd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255, verbose_name='Модель')),
                ('storageCapacity', models.IntegerField(verbose_name='емкость запоминающего устройства')),
                ('connectionConnector', models.CharField(max_length=255, verbose_name='соединительный разъем')),
                ('controller', models.CharField(max_length=255, verbose_name='контроллер')),
                ('maximumSequentialReadSpeed', models.IntegerField(verbose_name='максимальная скорость последовательного чтения')),
                ('maximumSequentialRecordingSpeed', models.IntegerField(verbose_name='максимальная скорость последовательной записи')),
                ('countryOfOrigin', models.CharField(max_length=255, verbose_name='Страна происхождения')),
                ('amount', models.IntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'SSD',
                'verbose_name_plural': 'SSDs',
            },
        ),
        migrations.CreateModel(
            name='VideoCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255, verbose_name='Модель')),
                ('Microarchitecture', models.CharField(max_length=255, verbose_name='Микроархитектура')),
                ('theStandardFrequencyOfOperationOfTheVideoChip', models.IntegerField(verbose_name='Стандартная Частота Работы Видеочипа')),
                ('turboFrequency', models.IntegerField(verbose_name='частота турбонаддува')),
                ('amountOfVideoMemory', models.IntegerField(verbose_name='Количество видео памяти')),
                ('memoryType', models.CharField(max_length=255, verbose_name='Тип памяти')),
                ('theBitDepthOfTheMemoryBus', models.IntegerField(verbose_name='Разрядность Шины Памяти')),
                ('theNumberOfMonitorsConnectedAtTheSameTime', models.IntegerField(verbose_name='Количество мониторов подключаемых одновремменно')),
                ('countryOfOrigin', models.CharField(max_length=255, verbose_name='Страна происхождения')),
                ('amount', models.IntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Видео карта',
                'verbose_name_plural': 'Видео карты',
            },
        ),
    ]
